#!/usr/bin/env bash
################3
#
# Este script genera la metadata para el repository p2 y lo levavta según el proyecto p2-repo
#
####################

#FIXME definir una variable del estilo ECLIPSE_HOME
#chequeo si existe el archivo eclipse, asumo que es una distribución de eclipse
[ -e eclipse  ] || (echo "Este script se ejecuta desde el directorio de Eclipse. copiar este $0 y p2-repo" && exit 1)

set -u

base_lib_module=${1?"Falta el directorio donde se encuentra el módulo base.lib"}
(cd $base_lib_module && mvn verify package)
#se genera un solo bundle/jar, el que corresponde
base_lib_jar=$(cd $base_lib_module/target && readlink -f *.jar)

set -e

launcher=plugins/org.eclipse.equinox.launcher_1.4.0.v20161219-1356.jar
target_repository=file:$(cygpath -aw $(pwd)/p2-repo/target/repository)

repo_source=$(cygpath -aw "/tmp/source~$RANDOM")
#se requiere que el bundle esté dentro del directorio plugins
mkdir -p $repo_source/plugins

cp $base_lib_jar $repo_source/plugins

rm -rf $target_repository

java -jar $launcher \
  -data /tmp/ws-$RANDOM \
  -application org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher \
  -metadataRepository $target_repository \
  -artifactRepository $target_repository \
  -source $repo_source \
  -compress \
  -publishArtifacts

category_file="file:$(cygpath -aw $(pwd)/category.xml)"
java -jar $launcher \
  -application org.eclipse.equinox.p2.publisher.CategoryPublisher \
  -data /tmp/ws-$RANDOM \
  -metadataRepository $target_repository \
  -categoryDefinition $category_file


cd p2-repo 
mvn jetty:run &
echo $! > jetty.pid

